/* IRremoteESP8266: IRsendDemo - demonstrates sending IR codes with IRsend.
 *
 * Version 1.1 January, 2019
 * Based on Ken Shirriff's IrsendDemo Version 0.1 July, 2009,
 * Copyright 2009 Ken Shirriff, http://arcfn.com
 *
 * An IR LED circuit *MUST* be connected to the ESP8266 on a pin
 * as specified by kIrLed below.
 *
 * TL;DR: The IR LED needs to be driven by a transistor for a good result.
 *
 * Suggested circuit:
 *     https://github.com/crankyoldgit/IRremoteESP8266/wiki#ir-sending
 *
 * Common mistakes & tips:
 *   * Don't just connect the IR LED directly to the pin, it won't
 *     have enough current to drive the IR LED effectively.
 *   * Make sure you have the IR LED polarity correct.
 *     See: https://learn.sparkfun.com/tutorials/polarity/diode-and-led-polarity
 *   * Typical digital camera/phones can be used to see if the IR LED is flashed.
 *     Replace the IR LED with a normal LED if you don't have a digital camera
 *     when debugging.
 *   * Avoid using the following pins unless you really know what you are doing:
 *     * Pin 0/D3: Can interfere with the boot/program mode & support circuits.
 *     * Pin 1/TX/TXD0: Any serial transmissions from the ESP8266 will interfere.
 *     * Pin 3/RX/RXD0: Any serial transmissions to the ESP8266 will interfere.
 *   * ESP-01 modules are tricky. We suggest you use a module with more GPIOs
 *     for your first time. e.g. ESP-12 etc.
 */

// RJV tested with ESP32 and ESP8266 All are Working Fine 
#include <Arduino.h>
#include <IRremoteESP8266.h>
#include <IRsend.h>

const uint16_t kIrLed = 23; // 4;  //Recommended: ESP8266 = 4 (D2). ESP32 = 23. LED GND to GPIO , +ve connect to 3.3v pin

IRsend irsend(kIrLed);  // Set the GPIO to be used to sending the message.

// data captured by IRrecvDumpV3.ino
int MI_TV_PRESS_DELAY = 650;
int TATA_SKY_PRESS_DELAY = 400;
//MI TV Remote
uint16_t MI_TV_SCROLL_DOWN[167] = {966, 568,  574, 1192,  574, 568,  630, 826,  574, 1194,  574, 558,  584, 568,  576, 880,  576, 1192,  574, 1194,  574, 570,  572, 13310,  964, 568,  574, 1192,  574, 568,  574, 880,  630, 1140,  574, 568,  574, 568,  576, 880,  574, 1192,  576, 1192,  574, 568,  574, 13310,  966, 568,  572, 1192,  576, 570,  574, 880,  574, 1192,  574, 568,  574, 568,  574, 880,  574, 1192,  574, 1192,  574, 570,  574, 13310,  966, 568,  574, 1192,  574, 570,  574, 880,  574, 1194,  574, 568,  574, 552,  592, 882,  576, 1190,  574, 1194,  572, 568,  576, 13308,  966, 568,  574, 1194,  574, 568,  574, 880,  576, 1192,  576, 568,  574, 568,  574, 882,  574, 1194,  574, 1192,  574, 568,  574, 13308,  968, 568,  572, 1192,  574, 568,  574, 880,  574, 1194,  574, 548,  594, 568,  574, 880,  574, 1192,  576, 1192,  574, 570,  574, 13308,  966, 568,  574, 1192,  574, 568,  574, 880,  576, 1192,  574, 568,  574, 570,  574, 882,  574, 1194,  574, 1192,  574, 568,  574};                        
uint16_t MI_TV_SCROLL_UP[167] = {966, 568,  574, 1192,  574, 568,  574, 882,  574, 1192,  576, 568,  574, 568,  574, 882,  574, 882,  572, 1194,  576, 1478,  574, 12712,  966, 568,  574, 1194,  574, 570,  574, 882,  572, 1194,  574, 514,  630, 570,  574, 882,  574, 882,  574, 1194,  574, 1480,  574, 12712,  966, 566,  574, 1194,  574, 570,  574, 882,  574, 1194,  574, 570,  574, 568,  574, 882,  574, 880,  574, 1192,  574, 1478,  574, 12710,  966, 556,  586, 1194,  574, 568,  574, 882,  574, 1194,  574, 568,  574, 568,  574, 882,  574, 882,  572, 1194,  574, 1480,  574, 12710,  966, 566,  574, 1192,  574, 570,  630, 826,  574, 1194,  574, 568,  574, 568,  574, 880,  574, 880,  574, 1192,  574, 1480,  574, 12712,  964, 568,  574, 1192,  576, 568,  574, 882,  574, 1194,  574, 568,  572, 574,  570, 880,  576, 880,  574, 1194,  574, 1478,  574, 12710,  966, 568,  574, 1194,  574, 570,  574, 882,  574, 1194,  574, 570,  574, 570,  572, 882,  574, 882,  574, 1194,  574, 1480,  572};  // UNKNOWN 1D10603E
uint16_t MI_TV_HOME[167] = {966, 568,  634, 1132,  638, 474,  666, 820,  636, 1130,  576, 568,  638, 478,  664, 1130,  638, 476,  666, 818,  638, 1130,  600, 13282,  1026, 508,  574, 1192,  636, 474,  668, 818,  636, 1132,  636, 480,  662, 480,  664, 1132,  636, 480,  664, 818,  636, 1130,  636, 13246,  1024, 482,  662, 1132,  636, 480,  660, 822,  638, 1130,  636, 478,  668, 482,  658, 1132,  574, 568,  636, 818,  636, 1132,  636, 13246,  1026, 480,  602, 1192,  636, 480,  664, 820,  636, 1132,  636, 482,  662, 482,  600, 1192,  636, 480,  602, 880,  576, 1192,  574, 13308,  966, 566,  574, 1194,  574, 568,  636, 820,  636, 1130,  638, 478,  604, 568,  634, 1134,  634, 480,  602, 882,  636, 1130,  576, 13308,  1026, 480,  662, 1132,  576, 556,  584, 880,  576, 1192,  576, 568,  576, 566,  576, 1192,  574, 556,  588, 880,  576, 1192,  576, 13306,  966, 568,  574, 1192,  636, 418,  664, 880,  574, 1192,  634, 482,  602, 568,  638, 1130,  636, 508,  574, 880,  574, 1194,  574};  // UNKNOWN CFACBF5C
uint16_t MI_TV_SCROLL_RIGHT[167] = {966, 568,  574, 1192,  574, 570,  574, 880,  576, 1192,  576, 568,  574, 570,  574, 1480,  572, 568,  574, 570,  574, 1192,  574, 13334,  968, 566,  574, 1192,  576, 568,  576, 880,  574, 1194,  574, 570,  574, 570,  572, 1480,  574, 570,  574, 568,  576, 1192,  576, 13334,  966, 566,  574, 1192,  574, 568,  574, 880,  574, 1192,  574, 568,  574, 568,  574, 1480,  574, 568,  574, 568,  574, 1192,  574, 13334,  966, 546,  596, 1192,  574, 568,  576, 880,  574, 1194,  574, 568,  576, 568,  574, 1478,  574, 570,  574, 568,  574, 1192,  574, 13334,  966, 568,  572, 1194,  574, 570,  574, 880,  574, 1192,  576, 568,  574, 568,  574, 1480,  574, 568,  574, 568,  574, 1192,  574, 13334,  966, 566,  574, 1192,  574, 570,  574, 882,  574, 1192,  576, 556,  586, 568,  574, 1480,  574, 564,  578, 570,  574, 1194,  574, 13336,  964, 568,  574, 1194,  574, 568,  574, 880,  574, 1192,  576, 568,  574, 570,  574, 1478,  576, 570,  574, 568,  574, 1194,  574};  // UNKNOWN B6BAF129
uint16_t MI_TV_SCROLL_LEFT[167] = {966, 568,  630, 1138,  628, 498,  590, 880,  576, 1192,  628, 486,  604, 570,  572, 1192,  576, 1478,  574, 880,  630, 826,  574, 12710,  966, 566,  576, 1194,  628, 488,  654, 826,  628, 1138,  630, 498,  646, 488,  600, 1192,  630, 1424,  628, 826,  630, 826,  630, 12656,  966, 568,  628, 1138,  574, 570,  574, 880,  574, 1194,  574, 568,  630, 486,  602, 1192,  628, 1424,  628, 828,  630, 824,  576, 12710,  966, 566,  576, 1192,  628, 490,  598, 882,  628, 1140,  628, 490,  598, 570,  574, 1194,  630, 1422,  576, 880,  574, 880,  630, 12658,  964, 568,  574, 1192,  574, 568,  574, 882,  628, 1138,  574, 568,  574, 570,  574, 1192,  576, 1478,  630, 826,  628, 826,  630, 12658,  964, 568,  574, 1192,  630, 488,  654, 826,  574, 1194,  574, 568,  628, 488,  602, 1192,  628, 1424,  576, 880,  630, 826,  630, 12654,  966, 568,  574, 1192,  628, 490,  600, 880,  574, 1194,  572, 568,  576, 568,  576, 1192,  576, 1478,  574, 880,  630, 824,  574};  // UNKNOWN 979A3DD8
uint16_t MI_TV_OK[167] = {966, 568,  630, 1136,  574, 568,  630, 824,  574, 1194,  574, 568,  576, 570,  572, 1480,  576, 880,  574, 568,  574, 1480,  572, 12738,  968, 564,  574, 1194,  574, 570,  574, 882,  574, 1192,  574, 568,  574, 570,  628, 1424,  574, 882,  572, 568,  574, 1478,  574, 12738,  966, 568,  574, 1192,  576, 568,  576, 880,  576, 1194,  630, 484,  604, 568,  574, 1480,  574, 880,  574, 568,  574, 1478,  574, 12738,  964, 566,  576, 1192,  576, 568,  574, 882,  628, 1138,  574, 568,  574, 570,  574, 1478,  574, 882,  574, 568,  576, 1478,  574, 12738,  966, 566,  574, 1194,  574, 568,  574, 882,  574, 1192,  574, 570,  574, 570,  572, 1478,  574, 882,  574, 570,  572, 1478,  576, 12736,  966, 566,  576, 1192,  574, 568,  574, 880,  574, 1192,  574, 570,  574, 568,  574, 1480,  574, 882,  572, 570,  574, 1478,  574, 12738,  966, 566,  576, 1194,  574, 570,  574, 880,  574, 1192,  576, 568,  574, 570,  574, 1478,  574, 880,  574, 568,  574, 1480,  574};  // UNKNOWN D31617E2
uint16_t MI_TV_VOLUME_PLUS[167] = {966, 568,  574, 1192,  576, 568,  576, 880,  574, 1194,  574, 568,  576, 568,  574, 1478,  574, 1190,  576, 568,  574, 566,  576, 13334,  966, 566,  576, 1194,  574, 568,  576, 880,  576, 1192,  574, 568,  576, 566,  578, 1478,  574, 1192,  574, 568,  576, 568,  574, 13334,  968, 566,  574, 1192,  576, 566,  578, 880,  574, 1192,  576, 566,  576, 568,  574, 1480,  574, 1192,  576, 568,  574, 568,  576, 13336,  966, 564,  576, 1192,  576, 566,  576, 880,  576, 1190,  576, 568,  576, 568,  576, 1478,  574, 1192,  574, 568,  576, 568,  574, 13334,  966, 566,  576, 1192,  576, 568,  574, 880,  576, 1194,  574, 568,  576, 568,  574, 1478,  574, 1192,  576, 568,  574, 568,  576, 13334,  968, 566,  576, 1192,  574, 568,  574, 880,  576, 1190,  576, 568,  574, 568,  574, 1478,  576, 1192,  576, 568,  574, 568,  574, 13334,  966, 566,  576, 1192,  576, 566,  576, 880,  574, 1192,  576, 570,  574, 568,  576, 1478,  574, 1194,  576, 564,  578, 568,  574};  // UNKNOWN 979A3DD8
uint16_t MI_TV_VOLUME_MINUS[167] = {966, 568,  574, 1192,  630, 490,  598, 878,  578, 1192,  574, 568,  574, 570,  574, 1480,  626, 1426,  574, 568,  574, 880,  574, 12736,  966, 568,  574, 1192,  576, 568,  574, 882,  628, 1138,  576, 568,  628, 502,  588, 1478,  576, 1478,  576, 568,  576, 882,  572, 12738,  966, 568,  628, 1140,  572, 570,  626, 828,  628, 1138,  576, 568,  628, 500,  590, 1478,  628, 1424,  576, 568,  628, 824,  576, 12738,  964, 566,  576, 1192,  576, 568,  574, 882,  574, 1192,  628, 492,  596, 568,  574, 1478,  628, 1424,  576, 568,  628, 826,  630, 12682,  966, 566,  574, 1192,  574, 568,  574, 882,  576, 1192,  574, 570,  626, 498,  592, 1478,  574, 1478,  574, 570,  574, 880,  630, 12682,  968, 566,  576, 1192,  574, 570,  574, 878,  576, 1194,  574, 568,  574, 568,  576, 1480,  628, 1426,  574, 568,  574, 880,  630, 12682,  966, 568,  630, 1136,  576, 568,  574, 880,  576, 1192,  628, 504,  584, 558,  586, 1478,  576, 1478,  574, 568,  630, 826,  576};  // UNKNOWN 95DB7835
uint16_t MI_TV_BACK[167] = {966, 568,  574, 1192,  574, 570,  574, 880,  576, 1192,  574, 568,  576, 568,  574, 880,  576, 1478,  576, 1192,  576, 878,  576, 12710,  966, 566,  576, 1192,  574, 568,  574, 880,  576, 1192,  576, 568,  576, 568,  574, 880,  576, 1478,  576, 1192,  574, 880,  576, 12708,  968, 566,  576, 1190,  576, 568,  576, 880,  574, 1192,  576, 568,  574, 570,  572, 880,  576, 1478,  574, 1192,  576, 880,  576, 12712,  966, 568,  574, 1192,  574, 568,  574, 880,  576, 1192,  576, 568,  574, 568,  574, 878,  576, 1478,  576, 1190,  576, 880,  576, 12710,  966, 566,  574, 1192,  576, 568,  574, 880,  574, 1192,  576, 568,  576, 568,  574, 880,  576, 1478,  576, 1192,  574, 880,  576, 12710,  966, 568,  574, 1192,  576, 568,  574, 880,  576, 1192,  574, 568,  574, 570,  574, 880,  578, 1476,  578, 1190,  576, 878,  630, 12658,  966, 568,  574, 1192,  576, 568,  576, 880,  576, 1192,  574, 568,  576, 570,  572, 882,  574, 1478,  576, 1192,  576, 880,  576};  // UNKNOWN 9562D8C9
uint16_t MI_TV_POWER[167] = {966, 566,  574, 568,  576, 1478,  576, 1478,  576, 568,  576, 1478,  574, 568,  574, 1478,  574, 568,  576, 1478,  576, 1478,  574, 10968,  966, 566,  574, 570,  574, 1480,  574, 1480,  574, 570,  574, 1478,  576, 570,  574, 1480,  574, 568,  574, 1480,  572, 1478,  576, 10968,  966, 566,  574, 568,  574, 1478,  574, 1478,  574, 568,  574, 1480,  574, 570,  574, 1480,  574, 568,  574, 1478,  574, 1478,  574, 10970,  966, 568,  574, 570,  574, 1480,  574, 1478,  574, 568,  574, 1478,  576, 568,  574, 1478,  574, 568,  574, 1478,  576, 1478,  574, 10968,  968, 566,  576, 568,  576, 1480,  574, 1478,  574, 570,  574, 1478,  576, 568,  574, 1478,  574, 568,  574, 1478,  574, 1478,  576, 10968,  966, 568,  574, 568,  576, 1478,  576, 1478,  574, 568,  574, 1478,  574, 568,  574, 1478,  574, 568,  576, 1478,  574, 1478,  574, 10970,  966, 566,  576, 568,  576, 1478,  576, 1478,  574, 568,  574, 1478,  574, 570,  574, 1478,  574, 568,  576, 1478,  574, 1478,  574};  // UNKNOWN F6521CD8

//TATA SKY Remote
uint16_t POWER[49] = {2652, 918,  482, 250,  578, 398,  490, 912,  476, 868,  868, 416,  480, 470,  476, 404,  488, 398,  490, 254,  580, 402,  486, 406,  484, 408,  536, 406,  488, 246,  642, 254,  580, 398,  548, 400,  490, 246,  588, 396,  546, 246,  1036, 382,  560, 854,  478, 246,  644};  // UNKNOWN F07374AF
uint16_t BACK[47] = {2652, 918,  398, 450,  458, 402,  490, 914,  396, 946,  868, 414,  480, 406,  482, 402,  486, 408,  482, 330,  560, 398,  490, 396,  494, 408,  480, 404,  486, 410,  478, 406,  484, 470,  868, 910,  398, 458,  452, 410,  484, 408,  482, 400,  936, 466,  396};  // RC6 C00083
uint16_t ONE[49] = {2652, 918,  398, 456,  454, 332,  560, 912,  398, 944,  870, 408,  486, 404,  486, 394,  496, 402,  486, 402,  486, 402,  488, 394,  494, 398,  490, 402,  488, 394,  496, 398,  490, 396,  494, 330,  558, 398,  492, 408,  482, 402,  486, 400,  488, 402,  488, 398,  938};  // RC6 C00001
uint16_t TWO[49] = {2652, 918,  400, 452,  456, 418,  472, 912,  400, 942,  870, 416,  478, 408,  482, 408,  482, 404,  484, 406,  484, 342,  546, 404,  484, 330,  560, 344,  546, 406,  484, 468,  400, 490,  398, 460,  446, 416,  476, 412,  478, 412,  478, 410,  478, 412,  924, 910,  478};  // RC6 C00002
uint16_t THREE[49] = {2654, 918,  398, 490,  400, 460,  444, 918,  402, 942,  868, 476,  398, 490,  400, 458,  448, 416,  476, 414,  476, 412,  476, 470,  400, 488,  400, 488,  400, 460,  444, 430,  462, 414,  476, 412,  476, 414,  476, 414,  474, 414,  476, 412,  478, 414,  924, 404,  482};  // RC6 C00003
uint16_t FOUR[49] = {2652, 918,  402, 454,  452, 414,  476, 914,  400, 942,  868, 352,  544, 408,  480, 470,  400, 488,  402, 488,  400, 460,  442, 424,  470, 414,  476, 414,  474, 410,  480, 412,  476, 414,  474, 336,  554, 404,  484, 408,  482, 412,  476, 470,  868, 910,  400, 458,  448};  // RC6 C00004
uint16_t FIVE[47] = {2652, 920,  400, 488,  400, 460,  442, 920,  400, 942,  868, 432,  462, 414,  476, 470,  400, 490,  400, 490,  400, 460,  444, 420,  472, 414,  474, 412,  478, 414,  476, 408,  480, 414,  476, 412,  478, 470,  400, 456,  448, 350,  544, 412,  924, 912,  866};  // RC6 C00005
uint16_t SIX[49] = {2654, 918,  402, 488,  400, 490,  398, 934,  400, 942,  868, 422,  472, 414,  476, 470,  398, 490,  400, 490,  398, 462,  444, 422,  472, 416,  474, 414,  476, 414,  474, 414,  476, 470,  398, 464,  442, 426,  468, 414,  476, 416,  474, 412,  924, 406,  478, 916,  400};  // RC6 C00006
uint16_t SEVEN[49] = {2654, 920,  400, 488,  400, 458,  446, 918,  402, 940,  868, 476,  400, 460,  444, 430,  464, 412,  478, 414,  476, 410,  480, 410,  478, 412,  478, 414,  474, 416,  474, 412,  478, 414,  476, 410,  480, 410,  480, 410,  480, 410,  480, 414,  922, 402,  482, 470,  400};  // RC6 C00007
uint16_t EIGHT[49] = {2652, 920,  400, 488,  400, 488,  400, 934,  474, 868,  868, 476,  400, 488,  400, 490,  400, 460,  444, 476,  398, 490,  400, 490,  400, 490,  400, 490,  398, 490,  400, 490,  400, 460,  446, 424,  468, 472,  400, 490,  400, 488,  868, 912,  402, 460,  444, 474,  400};  // RC6 C00008
uint16_t NINE[47] = {2654, 920,  474, 412,  406, 432,  472, 914,  400, 942,  868, 434,  462, 414,  476, 470,  400, 490,  400, 490,  398, 454,  454, 410,  482, 408,  482, 410,  478, 412,  478, 470,  400, 452,  454, 472,  400, 456,  450, 416,  476, 470,  868, 910,  402, 448,  906};  // RC6 C00009
uint16_t ZERO[51] = {2652, 918,  396, 448,  462, 404,  484, 914,  398, 942,  868, 476,  396, 452,  458, 410,  480, 404,  486, 468,  398, 458,  450, 410,  482, 468,  398, 452,  456, 472,  396, 452,  458, 408,  484, 470,  396, 456,  452, 404,  488, 398,  492, 330,  558, 408,  482, 468,  398, 454,  456};  // RC6 C00000
uint16_t CH_PLUS[49] = {2652, 918,  398, 490,  398, 490,  396, 938,  472, 868,  868, 476,  398, 490,  398, 492,  474, 272,  562, 468,  476, 272,  564, 408,  480, 408,  480, 470,  476, 270,  564, 468,  398, 492,  396, 492,  398, 494,  866, 910,  478, 270,  564, 470,  396, 492,  474, 408,  410};  // RC6 30
uint16_t CH_MINUS[47] = {2652, 918,  482, 394,  490, 406,  484, 856,  480, 862,  868, 476,  478, 400,  486, 270,  620, 404,  484, 406,  484, 402,  488, 244,  642, 408,  482, 404,  484, 268,  564, 410,  534, 406,  482, 278,  556, 342,  994, 910,  478, 270,  618, 268,  564, 468,  868};  // RC6 30
uint16_t VOL_PLUS[49] = {2654, 918,  478, 404,  488, 396,  488, 858,  478, 864,  868, 476,  476, 406,  482, 410,  482, 268,  620, 406,  486, 400,  488, 242,  588, 414,  476, 470,  476, 406,  486, 270,  616, 410,  482, 400,  486, 408,  482, 270,  1008, 910,  478, 270,  560, 468,  478, 274,  614};  // RC6 60
uint16_t VOL_MINUS[47] = {2652, 918,  476, 410,  482, 402,  486, 856,  478, 864,  868, 476,  478, 244,  644, 406,  484, 404,  486, 268,  622, 402,  488, 402,  484, 412,  480, 268,  562, 412,  532, 410,  408, 440,  520, 410,  480, 278,  614, 270,  1008, 910,  480, 268,  562, 408,  926};  // RC6 18
uint16_t FAV[49] = {2652, 920,  478, 396,  422, 480,  476, 856,  478, 864,  868, 418,  478, 468,  478, 404,  484, 266,  566, 468,  476, 410,  482, 268,  562, 414,  532, 406,  412, 484,  476, 408,  482, 272,  614, 288,  602, 410,  872, 466,  478, 270,  616, 270,  564, 912,  480, 404,  484};  // RC6 60
uint16_t MUTE[47] = {2654, 918,  400, 490,  478, 266,  624, 854,  478, 866,  866, 476,  478, 400,  488, 244,  644, 404,  484, 272,  620, 244,  588, 466,  478, 410,  484, 246,  640, 268,  620, 272,  616, 270,  562, 412,  476, 470,  478, 272,  562, 402,  934, 466,  476, 858,  868};  // RC6 0


void MITV_Power_ON_OFF()
{
  Serial.println("MI_TV_POWER");
  irsend.sendRaw(MI_TV_POWER, 167, 38);  // Send a raw data capture at 38kHz.
}

void MITV_HDMI_Input_Selection()
{
  int i = 0;
  Serial.println("IR Remote STARTED");
  for(i=0;i<3;i++)
  {
    Serial.println("MI_TV_HOME");
    irsend.sendRaw(MI_TV_HOME, 167, 38);  // Send a raw data capture at 38kHz.
    delay(MI_TV_PRESS_DELAY);
  }  
  for(i=0;i<4;i++) //3
  {
    Serial.println("MI_TV_SCROLL_UP");//3
    irsend.sendRaw(MI_TV_SCROLL_UP, 167, 38);  // Send a raw data capture at 38kHz.
    delay(MI_TV_PRESS_DELAY);
  }
  for(i=0;i<5;i++)
  {
    Serial.println("MI_TV_SCROLL_RIGHT");
    irsend.sendRaw(MI_TV_SCROLL_RIGHT, 167, 38);  // Send a raw data capture at 38kHz.
    delay(MI_TV_PRESS_DELAY); //5
  }  
  Serial.println("MI_TV_OK");
  irsend.sendRaw(MI_TV_OK, 167, 38);  // Send a raw data capture at 38kHz.
  delay(MI_TV_PRESS_DELAY);
}

void MITV_HDMI_Input_CCTV_Selection()
{
  MITV_HDMI_Input_Selection();
  Serial.println("MI_TV_SCROLL_DOWN HDMI 2 CCTV"); // HDMI 2 CCTV
  irsend.sendRaw(MI_TV_SCROLL_DOWN, 167, 38);  // Send a raw data capture at 38kHz.
  delay(MI_TV_PRESS_DELAY); 

  Serial.println("MI_TV_OK");
  irsend.sendRaw(MI_TV_OK, 167, 38);  // Send a raw data capture at 38kHz.
  delay(MI_TV_PRESS_DELAY);

  Serial.println("CCTV SELECT WAS DONE");
}

void MITV_HDMI_Input_TATASKY_Selection()
{
  MITV_HDMI_Input_Selection();
  Serial.println("MI_TV_SCROLL_DOWN HDMI 2 CCTV"); // HDMI 2 CCTV
  irsend.sendRaw(MI_TV_SCROLL_DOWN, 167, 38);  // Send a raw data capture at 38kHz.
  delay(MI_TV_PRESS_DELAY); 
  Serial.println("MI_TV_SCROLL_DOWN HDMI 1 TATASKY"); // HDMI 1 TATASKY
  irsend.sendRaw(MI_TV_SCROLL_DOWN, 167, 38);  // Send a raw data capture at 38kHz.
  delay(MI_TV_PRESS_DELAY);

  Serial.println("MI_TV_OK");
  irsend.sendRaw(MI_TV_OK, 167, 38);  // Send a raw data capture at 38kHz.
  delay(MI_TV_PRESS_DELAY);

  Serial.println("TATASKY SELECT WAS DONE");
}

void MITV_HDMI_Input_PC_Selection()
{
  MITV_HDMI_Input_Selection();
  Serial.println("MI_TV_SCROLL_DOWN HDMI 2 CCTV"); // HDMI 2 CCTV
  irsend.sendRaw(MI_TV_SCROLL_DOWN, 167, 38);  // Send a raw data capture at 38kHz.
  delay(MI_TV_PRESS_DELAY); 
  Serial.println("MI_TV_SCROLL_DOWN HDMI 1 TATASKY"); // HDMI 1 TATASKY
  irsend.sendRaw(MI_TV_SCROLL_DOWN, 167, 38);  // Send a raw data capture at 38kHz.
  delay(MI_TV_PRESS_DELAY);
  Serial.println("MI_TV_SCROLL_DOWN HDMI 3 PC"); // HDMI 3 PC
  irsend.sendRaw(MI_TV_SCROLL_DOWN, 167, 38);  // Send a raw data capture at 38kHz.
  delay(MI_TV_PRESS_DELAY);

  Serial.println("MI_TV_OK");
  irsend.sendRaw(MI_TV_OK, 167, 38);  // Send a raw data capture at 38kHz.
  delay(MI_TV_PRESS_DELAY);

  Serial.println("PC SELECT WAS DONE");
}

void setup() {
  irsend.begin();
#if ESP8266
  Serial.begin(115200, SERIAL_8N1, SERIAL_TX_ONLY);
#else  // ESP8266
  Serial.begin(115200, SERIAL_8N1);
#endif  // ESP8266
}

void loop() {
/*
MITV_HDMI_Input_PC_Selection();
delay(10000);
MITV_HDMI_Input_TATASKY_Selection(); 
delay(10000); 
MITV_HDMI_Input_CCTV_Selection();
delay(10000);
*/
//MITV_Power_ON_OFF();
//delay(20000);
/*
  Serial.println("MI_TV_VOLUME_MINUS");
  irsend.sendRaw(MI_TV_VOLUME_MINUS, 167, 38);
  delay(2000);
  Serial.println("MI_TV_VOLUME_PLUS");
  irsend.sendRaw(MI_TV_VOLUME_PLUS, 167, 38);
  delay(2000); 
*/
  Serial.println("TATA SKY POWER");
  irsend.sendRaw(POWER, 167, 38);
  delay(4000);

  Serial.println("NINE");
  irsend.sendRaw(NINE, 167, 38);
  delay(TATA_SKY_PRESS_DELAY);
  Serial.println("ZERO");
  irsend.sendRaw(ZERO, 167, 38);
  delay(TATA_SKY_PRESS_DELAY);
  Serial.println("ZERO");
  irsend.sendRaw(ZERO, 167, 38);
  delay(10000);

  Serial.println("NINE");
  irsend.sendRaw(NINE, 167, 38);
  delay(TATA_SKY_PRESS_DELAY);
  Serial.println("ZERO");
  irsend.sendRaw(ZERO, 167, 38);
  delay(TATA_SKY_PRESS_DELAY);
  Serial.println("ONE");
  irsend.sendRaw(ONE, 167, 38);
  delay(10000);
}
